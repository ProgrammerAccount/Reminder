import { ElementRef, OnInit, EventEmitter, ChangeDetectorRef, KeyValueDiffers, DoCheck, OnDestroy } from '@angular/core';
import * as datetimepicker from 'tempusdominus-bootstrap-4';
import * as moment from 'moment';
export declare class NgTempusdominusBootstrapInputDirective implements OnInit, OnDestroy, DoCheck {
    private changeDetector;
    protected el: ElementRef;
    private differs;
    _value: moment.Moment;
    private _options;
    options: datetimepicker.SetOptions;
    click: EventEmitter<any>;
    private dpinitialized;
    private inputOnly;
    dpElement: any;
    private optionsDiffer;
    private _onTouched;
    private _onChange;
    constructor(changeDetector: ChangeDetectorRef, el: ElementRef, differs: KeyValueDiffers);
    onBlur(): void;
    onFocus(): void;
    /**
     * For click outside of input, for input only
     * @param event event object
     * @param targetElement target element object
     */
    outsideClick(event: any, targetElement: HTMLElement): void;
    value: moment.Moment;
    writeValue(value: any): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: () => any): void;
    private setDpValue(val);
    setDisabledState(isDisabled: boolean): void;
    ngOnInit(): void;
    ngDoCheck(): void;
    ngOnDestroy(): void;
    toggle(): void;
}
/**
 * Allows the datepicker to be toggled via click.
 *  */
export declare class NgTempusdominusBootstrapToggleDirective {
    tempusDominus: any;
    cursor: String;
    click(): void;
    constructor(tempusDominus: any, elementRef: ElementRef);
    toggleOpen(): void;
}
/**
 * Container
 *  */
export declare class NgTempusdominusBootstrapDirective {
    private el;
    private _input;
    /**
     * For click outside of container,
     * @param event event object
     * @param targetElement target element object
     */
    outsideClick(event: any, targetElement: HTMLElement): void;
    constructor(el: ElementRef);
    toggle(): void;
}
