{
  "version": 3,
  "file": "ng-tempusdominus-bootstrap4.umd.min.js",
  "sources": [
    "ng://ng-tempusdominus-bootstrap4/out/ng-tempusdominus-bootstrap.directive.ts",
    "ng://ng-tempusdominus-bootstrap4/out/ng-tempusdominus-bootstrap.module.ts"
  ],
  "sourcesContent": [
    "import {\n    Directive,\n    ElementRef,\n    Input,\n    OnInit,\n    EventEmitter,\n    Output,\n    forwardRef,\n    ChangeDetectorRef,\n    KeyValueDiffer,\n    KeyValueDiffers,\n    DoCheck,\n    OnDestroy,\n    HostListener,\n    HostBinding,\n    Inject,\n    ContentChild\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\ndeclare var $: any;\nimport * as datetimepicker from 'tempusdominus-bootstrap-4';\nimport * as moment from 'moment';\n\n\n@Directive({\n    selector: '[NgTempusdominusBootstrapInput]',\n    exportAs: 'NgTempusdominusBootstrapInput',\n    providers: [\n        {provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgTempusdominusBootstrapInputDirective), multi: true}\n    ]\n})\nexport class NgTempusdominusBootstrapInputDirective implements OnInit, OnDestroy, DoCheck {\n\n    _value: moment.Moment;\n    private _options: datetimepicker.SetOptions = {};\n    @Input() set options(value) {\n      if (value !== null) {\n        this._options = value;\n      }\n    }\n    get options(): datetimepicker.SetOptions {\n        return this._options;\n    }\n    @Output() click: EventEmitter<any> = new EventEmitter<any>();\n    // datepicker: datetimepicker.Datetimepicker;\n    private dpinitialized: boolean;\n    private inputOnly: boolean;\n\n    dpElement;\n    private optionsDiffer: KeyValueDiffer<string, any>;\n    private _onTouched: any = () => {\n    }\n    private _onChange: any = () => {\n    }\n\n    constructor(\n        private changeDetector: ChangeDetectorRef,\n        protected el: ElementRef,\n        private differs: KeyValueDiffers\n    ) {\n        this.dpinitialized = false;\n        const $parent = $(el.nativeElement.parentNode);\n        this.inputOnly = !$parent.hasClass('input-group');\n        this.dpElement = $parent.hasClass('input-group') ? $parent : $(el.nativeElement);\n    }\n\n    @HostListener('blur') onBlur() {\n        this._onTouched();\n    }\n    @HostListener('focus') onFocus() {\n        if (this.inputOnly) {\n            this.dpElement.datetimepicker('toggle');\n        }\n    }\n    /**\n     * For click outside of input, for input only\n     * @param event event object\n     * @param targetElement target element object\n     */\n    @HostListener('document:click', ['$event', '$event.target'])\n    outsideClick(event, targetElement: HTMLElement): void {\n        if (!targetElement || !this.inputOnly || this.options.inline) {\n            return;\n        }\n        const clickedInside = this.el.nativeElement.contains(targetElement);\n        if (!clickedInside) {\n            this.dpElement.datetimepicker('hide');\n        }\n    }\n\n    get value() {\n        return this._value || null;\n    }\n\n    set value(val) {\n        this._value = val;\n        this._onChange(val);\n        if (val) {\n            this._onTouched();\n        }\n        this.changeDetector.markForCheck();\n    }\n\n    writeValue(value) {\n        // if we have a previous value and current value is falsy\n        // clear the picker\n        if (this._value && !value) {\n            this.value = null;\n            this.dpElement.datetimepicker('clear');\n        }\n        this.value = value;\n        this.setDpValue(value);\n    }\n\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n\n    registerOnTouched(fn: () => any): void {\n        this._onTouched = fn;\n    }\n\n    private setDpValue(val) {\n        if (!this.dpinitialized) {\n            return;\n        }\n        if (val) {\n            this.dpElement.datetimepicker('date', this.value);\n        }\n    }\n    setDisabledState(isDisabled: boolean): void {\n        if (isDisabled) {\n            this.dpElement.datetimepicker('disable');\n          return;\n        }\n        this.dpElement.datetimepicker('enable');\n      }\n\n    ngOnInit(): void {\n        this.dpinitialized = true;\n        this.dpElement.datetimepicker(this.options);\n        this.dpElement.on('change.datetimepicker', (e) => {\n            if (e.date !== this.value) {\n                this.value = e.date || null;\n            }\n        });\n\n        this.dpElement.on('click', () => {\n            this.click.emit();\n        });\n        this.optionsDiffer = this.differs.find(this.options).create();\n    }\n\n    ngDoCheck() {\n        if (this.dpinitialized) {\n            const changes = this.optionsDiffer.diff(this.options);\n            if (changes) {\n                $.map(this.options, (value, key) => {\n                    this.dpElement.datetimepicker(key, value);\n                });\n            }\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.dpElement.datetimepicker('destroy');\n    }\n    toggle(): void {\n        this.dpElement.datetimepicker('toggle');\n    }\n}\n/**\n * Allows the datepicker to be toggled via click.\n *  */\n@Directive({\n    selector: '[NgTempusdominusBootstrapToggle]'\n  })\nexport class NgTempusdominusBootstrapToggleDirective {\n    @HostBinding('style.cursor') cursor: String = 'pointer';\n    @HostListener('click') click() {\n        this.toggleOpen();\n    }\n    constructor(\n        @Inject(forwardRef(() => NgTempusdominusBootstrapDirective)) public tempusDominus,\n        elementRef: ElementRef\n    ) {\n    }\n    toggleOpen() {\n        this.tempusDominus.toggle();\n    }\n}\n/**\n * Container\n *  */\n@Directive({\n    selector: '[NgTempusdominusBootstrap]'\n})\nexport class NgTempusdominusBootstrapDirective  {\n    @ContentChild(NgTempusdominusBootstrapInputDirective) private _input: NgTempusdominusBootstrapInputDirective;\n    /**\n     * For click outside of container,\n     * @param event event object\n     * @param targetElement target element object\n     */\n    @HostListener('document:click', ['$event', '$event.target'])\n    outsideClick(event, targetElement: HTMLElement): void {\n        if (!targetElement) {\n            return;\n        }\n        const clickedInside = this.el.nativeElement.contains(targetElement);\n        if (!clickedInside) {\n            this._input.dpElement.datetimepicker('hide');\n        }\n    }\n\n\n    constructor(private el: ElementRef) {\n    }\n    toggle() {\n        this._input.toggle();\n    }\n}\n\n",
    "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport {\n    NgTempusdominusBootstrapDirective,\n    NgTempusdominusBootstrapToggleDirective,\n    NgTempusdominusBootstrapInputDirective\n} from './ng-tempusdominus-bootstrap.directive';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule\n    ],\n    declarations: [\n        NgTempusdominusBootstrapDirective,\n        NgTempusdominusBootstrapToggleDirective,\n        NgTempusdominusBootstrapInputDirective,\n    ],\n    exports: [\n        NgTempusdominusBootstrapDirective,\n        NgTempusdominusBootstrapToggleDirective,\n        NgTempusdominusBootstrapInputDirective\n    ]\n})\nexport class NgTempusdominusBootstrapModule {\n}\n"
  ],
  "names": [
    "NgTempusdominusBootstrapInputDirective",
    "changeDetector",
    "el",
    "differs",
    "this",
    "_options",
    "click",
    "EventEmitter",
    "_onTouched",
    "_onChange",
    "dpinitialized",
    "$parent",
    "$",
    "nativeElement",
    "parentNode",
    "inputOnly",
    "hasClass",
    "dpElement",
    "Object",
    "defineProperty",
    "prototype",
    "get",
    "set",
    "value",
    "onBlur",
    "onFocus",
    "datetimepicker",
    "outsideClick",
    "event",
    "targetElement",
    "options",
    "inline",
    "contains",
    "_value",
    "val",
    "markForCheck",
    "writeValue",
    "setDpValue",
    "registerOnChange",
    "fn",
    "registerOnTouched",
    "setDisabledState",
    "isDisabled",
    "ngOnInit",
    "_this",
    "on",
    "e",
    "date",
    "emit",
    "optionsDiffer",
    "find",
    "create",
    "ngDoCheck",
    "diff",
    "map",
    "key",
    "ngOnDestroy",
    "toggle",
    "type",
    "Directive",
    "args",
    "selector",
    "exportAs",
    "providers",
    "provide",
    "NG_VALUE_ACCESSOR",
    "useExisting",
    "forwardRef",
    "multi",
    "ChangeDetectorRef",
    "ElementRef",
    "KeyValueDiffers",
    "Input",
    "Output",
    "HostListener",
    "NgTempusdominusBootstrapToggleDirective",
    "tempusDominus",
    "elementRef",
    "cursor",
    "toggleOpen",
    "undefined",
    "decorators",
    "Inject",
    "NgTempusdominusBootstrapDirective",
    "HostBinding",
    "_input",
    "ContentChild",
    "NgTempusdominusBootstrapModule",
    "NgModule",
    "imports",
    "CommonModule",
    "FormsModule",
    "declarations",
    "exports"
  ],
  "mappings": "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"
}
